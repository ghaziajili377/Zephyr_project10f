<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
  <head>
    <title>Linking and section placement</title>
    <meta content="text/html; charset=UTF-8" http-equiv="Content-Type"/>
    <meta content="RAL PrepHTML" name="GENERATOR"/>
    
    
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/ses-default.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/ses.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/rwt-doc-page.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/theme.css"/>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/jquery-latest.js"><!--><-->
</script>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/rwt.js"><!--><-->
</script>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/rwt-doc-page.js"><!--><-->
</script>
    
  </head>

  <body>
    <div id="rwt-content">
      
<p>Executable programs consist of a number of sections. Typically,
there are program sections for code, initialized data, and zeroed data.
There is often more than one code section and they must be
placed at specific addresses in memory.</p><p>To describe how the program sections of your program are positioned in memory, 
the SEGGER Embedded Studio for ARM project system uses <i>memory-map</i> files and
<i>section-placement</i> files. These XML-formatted files are
described in <a href="ide_memory_map_file_format.htm">Memory Map file format</a> and <a href="ide_section_placement_file_format.htm">Section Placement file format</a>.
They can be edited with the SEGGER Embedded Studio for ARM text editor. The memory-map file
specifies the start address and size of target memory
segments. The section-placement file specifies where to place
program sections in the target's memory segments. Separating the memory
map from the section-placement scheme enables a single hardware description
to be shared across projects and also enables a project to be built for a 
variety of hardware descriptions.</p><p>For example, a memory-map file representing a device with two memory
segments called <b>FLASH</b> and <b>SRAM</b> could look something
like this in the memory-map editor.</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span>&lt;</span><span class="rwt-code-markup">Root </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Device1</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>FLASH</span><span>"</span><span class="rwt-code-attribute"> start</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>0x10000000</span><span>"</span><span class="rwt-code-attribute"> size</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>0x10000</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>SRAM</span><span>"</span><span class="rwt-code-attribute"> start</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>0x20000000</span><span>"</span><span class="rwt-code-attribute"> size</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>0x1000</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>A corresponding section-placement file will refer to the memory segments of
the memory-map file and will list the sections to be placed in those
segments. This is done by using a memory-segment name in the section-placement
file that matches the corresponding memory-segment name in the memory-map file.</p><p>For example, a section-placement file that places a section called <b>.stack</b> 
in the <b>SRAM</b> segment and the <b>.vectors</b> and <b>.text</b> sections in
the <b>FLASH</b> segment would look like this:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span>&lt;</span><span class="rwt-code-markup">Root </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Flash Section Placement</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>FLASH</span><span>"</span><span class="rwt-code-attribute"> </span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.vectors</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.text</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;/</span><span class="rwt-code-markup">MemorySegment</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>SRAM</span><span>"</span><span class="rwt-code-attribute"> </span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">   </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.stack</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>No</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;/</span><span class="rwt-code-markup">MemorySegment</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/><span>&lt;/</span><span class="rwt-code-markup">Root</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>Note that the order of section placement within a segment is top down; in this 
example <b>.vectors</b> is placed at lower addresses than <b>.text</b>. The order
memory segments are processed is bottom up; so in this example the sections in
the <b>SRAM</b> segment will be placed prior to the sections in the <b>FLASH</b>
segment.</p><p>Multiple memory segments can be specified by separating them with a semicolon.
In the following example, the <b>.stack</b> section will be placed in the SRAM2
memory segment if it exists in the memory map, otherwise it will be placed in
the SRAM memory segment. Sections can only be placed in one segment, they will
not be placed in a second segment when the first is full.</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span>&lt;</span><span class="rwt-code-markup">Root </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Flash Section Placement</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>FLASH</span><span>"</span><span class="rwt-code-attribute"> </span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.vectors</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.text</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;/</span><span class="rwt-code-markup">MemorySegment</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>SRAM2;SRAM</span><span>"</span><span class="rwt-code-attribute"> </span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">   </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.stack</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>No</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;/</span><span class="rwt-code-markup">MemorySegment</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/><span>&lt;/</span><span class="rwt-code-markup">Root</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>The memory-map file and section-placement file to use for linkage can be 
included as a part of the project or, alternatively, they can be
specified in the project's <a href="ide_property_linker_help.htm">linker options</a>.</p><p>You can create a new program section using either the assembler or the compiler. 
For the C/C++ compiler, this can be achieved using <b>__attribute__</b> on declarations.
For example:</p>
<pre class="rwt-code"><span class="rwt-code-keyword">void</span><span class="rwt-code-text"> </span><span class="rwt-code-function">foobar</span><span class="rwt-code-operator">(</span><span class="rwt-code-keyword">void</span><span class="rwt-code-operator">)</span><span class="rwt-code-text"> </span><span class="rwt-code-keyword">__attribute__</span><span class="rwt-code-function"> </span><span class="rwt-code-operator">((</span><span class="rwt-code-function">section</span><span class="rwt-code-operator">(</span><span>"</span><span>.foo</span><span>"</span><span class="rwt-code-operator">)));</span></pre><p>This will allocate <b>foobar</b> in the section called <b>.foo</b>.
Alternatively, you can specify the names for the code, constant, data, and zeroed-data
sections of an entire compilation unit by using the <b>Section Options</b> options.</p><p>You can now place the section into the section placement file using the editor
so that it will be located after the vectors sections as follows:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span>&lt;</span><span class="rwt-code-markup">Root </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Flash Section Placement</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>FLASH</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.vectors</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.foo</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.text</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;/</span><span class="rwt-code-markup">MemorySegment</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>SRAM</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">   </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.stack</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>No</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;/</span><span class="rwt-code-markup">MemorySegment</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/><span>&lt;/</span><span class="rwt-code-markup">Root</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>If you are modifying a section-placement file that is supplied in the SEGGER Embedded Studio for ARM
distribution, you will need to import it into your project using the <b>Project Explorer</b>.</p><p>Sections containing code and constant data should have their <b>load</b> project option set 
to <b>Yes</b>. Some sections don't require any loading, such as stack sections 
and zeroed-data sections; such sections should have their <b>load</b> project option set to <b>No</b>.</p><p>Some sections that are loaded then need to be copied to sections that aren't yet loaded.
This is required for initialized data sections and to copy code from slow memory regions to faster ones.
To do this, the <b>runin</b> attribute should contain the name of a section
in the section-placement file to which the section will be copied.</p><p>For example, initialized data is loaded into the <b>.data</b> section and then is copied
into the <b>.data_run</b> section using:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span>&lt;</span><span class="rwt-code-markup">Root </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Flash Section Placement</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>FLASH</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.vectors</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.text</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.data</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> runin</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.data_run</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;/</span><span class="rwt-code-markup">MemorySegment</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>SRAM</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.data_run</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>No</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.stack</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>No</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;/</span><span class="rwt-code-markup">MemorySegment</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/><span>&lt;/</span><span class="rwt-code-markup">Root</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>The startup code will copy the contents of the <b>.data</b> section to
the <b>.data_run</b> section. To enable this, symbols named
<b>__</b><i>section-name</i><b>_start__</b>, <b>__</b><i>section-name</i><b>_end__</b>,
<b>__</b><i>section-name</i><b>_load_start__</b> and <b>__</b><i>section-name</i><b>_load_end__</b>
are generated marking the section start, end, load start and load end addresses
of each section. The startup code uses these symbols to copy the sections from their load positions to
their run positions.</p><p>You can also create your own load and run section, for example the following
placement file adds a  <b>.mydata</b> section:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span>&lt;</span><span class="rwt-code-markup">Root </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Flash Section Placement</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>FLASH</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.vectors</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.text</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.data</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> runin</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.data_run</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.mydata</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>Yes</span><span>"</span><span class="rwt-code-attribute"> runin</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.mydata_run</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;/</span><span class="rwt-code-markup">MemorySegment</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>SRAM</span><span>"</span><span class="rwt-code-attribute"/><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.data_run</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>No</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.mydata_run</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>No</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span>&lt;</span><span class="rwt-code-markup">ProgramSection </span><span class="rwt-code-attribute">name</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>.stack</span><span>"</span><span class="rwt-code-attribute"> load</span><span>=</span><span class="rwt-code-attribute"/><span>"</span><span>No</span><span>"</span><span class="rwt-code-attribute"> </span><span>/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span>&lt;/</span><span class="rwt-code-markup">MemorySegment</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/><span>&lt;/</span><span class="rwt-code-markup">Root</span><span>></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>As the startup code doesn't know about this section, the following code
will need to be added to the program to initialise the section:</p>
<pre class="rwt-code"><span class="rwt-code-comment">/* Section image located in flash */</span>
<span class="rwt-code-keyword">extern</span><span class="rwt-code-text"> </span><span class="rwt-code-keyword">const</span><span class="rwt-code-text"> </span><span class="rwt-code-keyword">unsigned</span><span class="rwt-code-text"> </span><span class="rwt-code-keyword">char</span><span class="rwt-code-text"> </span><span class="rwt-code-text">__mydata_load_start__</span><span class="rwt-code-operator">[];</span>
<span class="rwt-code-keyword">extern</span><span class="rwt-code-text"> </span><span class="rwt-code-keyword">const</span><span class="rwt-code-text"> </span><span class="rwt-code-keyword">unsigned</span><span class="rwt-code-text"> </span><span class="rwt-code-keyword">char</span><span class="rwt-code-text"> </span><span class="rwt-code-text">__mydata_load_end__</span><span class="rwt-code-operator">[];</span>

<span class="rwt-code-comment">/* Where to locate the section image in RAM. */</span>
<span class="rwt-code-keyword">extern</span><span class="rwt-code-text"> </span><span class="rwt-code-keyword">unsigned</span><span class="rwt-code-text"> </span><span class="rwt-code-keyword">char</span><span class="rwt-code-text"> </span><span class="rwt-code-text">__mydata_start__</span><span class="rwt-code-operator">[];</span>
<span class="rwt-code-keyword">extern</span><span class="rwt-code-text"> </span><span class="rwt-code-keyword">unsigned</span><span class="rwt-code-text"> </span><span class="rwt-code-keyword">char</span><span class="rwt-code-text"> </span><span class="rwt-code-text">__mydata_end__</span><span class="rwt-code-operator">[];</span>

<span class="rwt-code-operator">...</span>

<span class="rwt-code-comment">/* Copy image from flash to RAM. */</span>
<span class="rwt-code-function">memcpy</span><span class="rwt-code-operator">(</span><span class="rwt-code-text">__mydata_start__</span><span class="rwt-code-operator">,</span>
       <span class="rwt-code-text">__mydata_load_start__</span><span class="rwt-code-operator">,</span>
       <span class="rwt-code-text">__mydata_end__ </span><span class="rwt-code-operator">-</span><span class="rwt-code-text"> </span><span class="rwt-code-text">__mydata_start__</span><span class="rwt-code-operator">);</span></pre> 
    </div>
  </body>
</html>